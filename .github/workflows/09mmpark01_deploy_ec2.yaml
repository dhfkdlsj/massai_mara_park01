name: massai mara park 01 deploy ec2

on:
  workflow_dispatch

env:
  HOSTNAME: 52.91.3.174
  USER_NAME: ubuntu

jobs:
  build_jar:
    name: Build JAR
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Rename JAR for consistency
        run: |
          mkdir artifact
          cp ./build/libs/*SNAPSHOT.jar ./artifact/application.jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: application.jar
          path: ./artifact/application.jar

  deploy_ec2:
    needs: build_jar
    name: Upload JAR to EC2
    runs-on: ubuntu-22.04
    steps:
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: application.jar

      - name: Setup SSH directory
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Make private key file
        run: |
          echo "${{ secrets.EC2_PRIVATEKEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key

      - name: Upload JAR via SCP
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i ~/.ssh/ec2_key -P 22 application.jar \
          ${{ env.USER_NAME }}@${{ env.HOSTNAME }} '
                nohap java -jar ./massai_mara_park-0.0.1-SNAPSHOT.jar > app.log 2>&1 < /dev/null &
            '

      - name: Cleanup private key
        if: always()
        run: rm -f ~/.ssh/ec2_key

  run_test_ec2:
    needs: deploy_ec2
    name: Run and Test on EC2
    runs-on: ubuntu-22.04
    steps:
      - name: Setup SSH directory
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

      - name: Make private key file
        run: |
          echo "${{ secrets.EC2_PRIVATEKEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key

      - name: Run Spring Boot App on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
          -i ~/.ssh/ec2_key -p 22 \
          ${{ env.USER_NAME }}@${{ env.HOSTNAME }} '
            nohup java -jar ~/application.jar > log.txt 2>&1 &
          '

      - name: Cleanup private key
        if: always()
        run: rm -f ~/.ssh/ec2_key